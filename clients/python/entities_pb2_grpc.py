# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import entities_pb2 as entities__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class EntityServiceStub(object):
    """*
    The entity service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.readEntities = channel.unary_unary(
                '/dk.itu.real.ooe.EntityService/readEntities',
                request_serializer=entities__pb2.Uuids.SerializeToString,
                response_deserializer=entities__pb2.Entities.FromString,
                )
        self.spawnEntities = channel.unary_unary(
                '/dk.itu.real.ooe.EntityService/spawnEntities',
                request_serializer=entities__pb2.SpawnEntities.SerializeToString,
                response_deserializer=entities__pb2.Uuids.FromString,
                )
        self.readEntitiesInSphere = channel.unary_unary(
                '/dk.itu.real.ooe.EntityService/readEntitiesInSphere',
                request_serializer=entities__pb2.Sphere.SerializeToString,
                response_deserializer=entities__pb2.Entities.FromString,
                )
        self.updateEntityAI = channel.unary_unary(
                '/dk.itu.real.ooe.EntityService/updateEntityAI',
                request_serializer=entities__pb2.EntityAIUpdate.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class EntityServiceServicer(object):
    """*
    The entity service
    """

    def readEntities(self, request, context):
        """* Reads multiple entities *
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def spawnEntities(self, request, context):
        """* Spawn multiple entities. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def readEntitiesInSphere(self, request, context):
        """* Read entities in specified radius 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateEntityAI(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EntityServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'readEntities': grpc.unary_unary_rpc_method_handler(
                    servicer.readEntities,
                    request_deserializer=entities__pb2.Uuids.FromString,
                    response_serializer=entities__pb2.Entities.SerializeToString,
            ),
            'spawnEntities': grpc.unary_unary_rpc_method_handler(
                    servicer.spawnEntities,
                    request_deserializer=entities__pb2.SpawnEntities.FromString,
                    response_serializer=entities__pb2.Uuids.SerializeToString,
            ),
            'readEntitiesInSphere': grpc.unary_unary_rpc_method_handler(
                    servicer.readEntitiesInSphere,
                    request_deserializer=entities__pb2.Sphere.FromString,
                    response_serializer=entities__pb2.Entities.SerializeToString,
            ),
            'updateEntityAI': grpc.unary_unary_rpc_method_handler(
                    servicer.updateEntityAI,
                    request_deserializer=entities__pb2.EntityAIUpdate.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dk.itu.real.ooe.EntityService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EntityService(object):
    """*
    The entity service
    """

    @staticmethod
    def readEntities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dk.itu.real.ooe.EntityService/readEntities',
            entities__pb2.Uuids.SerializeToString,
            entities__pb2.Entities.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def spawnEntities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dk.itu.real.ooe.EntityService/spawnEntities',
            entities__pb2.SpawnEntities.SerializeToString,
            entities__pb2.Uuids.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def readEntitiesInSphere(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dk.itu.real.ooe.EntityService/readEntitiesInSphere',
            entities__pb2.Sphere.SerializeToString,
            entities__pb2.Entities.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateEntityAI(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dk.itu.real.ooe.EntityService/updateEntityAI',
            entities__pb2.EntityAIUpdate.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
